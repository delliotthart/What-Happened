knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install('FNN')
install_package('FNN')
install.package('FNN', dependency = 'TRUE')
install.packages('FNN', dependency = 'TRUE')
install.packages("tidyverse", dependencies = TRUE)
install.packages('HDCT', dependencies = TRUE)
install.packages('HDCI', dependencies = TRUE)
install.packages(tibble)
install.packages('tibble')
install.packages('tibble', dependencies = TRUE)
install.packages('rpart', dependencies = TRUE)
data
demog <- select(demog, naturalized:med_hh_val)
data <- read.csv(file = "./merged_final.csv")
pwd
data <- read.csv(file = "../data/merged_final.csv")
eval_y <- election_data[election_data$year == 2016,ncol(election_data)]
feature_list <- c('naturalized', 'non_citizen', 'female', 'foodstamp',
'age', 'white', 'black', 'asian_pac_islander', 'multi_racial',
'indig', 'hispanic', 'married', 'single', 'foreign_born',
'student', 'veteran', 'moved_last_year', 'col_degree',
'less_than_hs', 'grad', 'indig_land', 'farm',
'med_hhinc', 'med_age', 'med_hh_val')
Training_X
#tree <- rpart()
#tree <- rpart()
#tree <- rpart()
#tree <- rpart()
require('ggplot2')
require(dplyr)
require(tibble)
require(HDCI)
feature_list <- c('naturalized', 'non_citizen', 'female', 'foodstamp',
'age', 'white', 'black', 'asian_pac_islander', 'multi_racial',
'indig', 'hispanic', 'married', 'single', 'foreign_born',
'student', 'veteran', 'moved_last_year', 'col_degree',
'less_than_hs', 'grad', 'indig_land', 'farm',
'med_hhinc', 'med_age', 'med_hh_val')
data <- read.csv(file = "../data/merged_final.csv")
features <- feature_list[c(ft_names)]
Training_X <- election_data[election_data$year != 2016,c(features)]
Training_Y <- election_data[election_data$year != 2016,ncol(election_data)]
to_predict <- election_data[election_data$year == 2016,c(features)]
eval_y <- election_data[election_data$year == 2016,ncol(election_data)]
#tree <- rpart()
require('ggplot2')
require(dplyr)
require(tibble)
require(HDCI)
feature_list <- c('naturalized', 'non_citizen', 'female', 'foodstamp',
'age', 'white', 'black', 'asian_pac_islander', 'multi_racial',
'indig', 'hispanic', 'married', 'single', 'foreign_born',
'student', 'veteran', 'moved_last_year', 'col_degree',
'less_than_hs', 'grad', 'indig_land', 'farm',
'med_hhinc', 'med_age', 'med_hh_val')
feature_names <- c('Naturalized Citizens', 'Non-Citizens',
'Female','Foodstamp','Age (Mean)', 'White', "Black",
'Asian-American/Pacific Islander','Multi-Racial','Indigenous',
'Hispanic','Married','Single','Foreign Born', 'Students',
'Veteran','Moved Last Year', 'College Degree',
'Less than High School','Graduate','Indigenous Sovereign Land',
'Farm Households','Income (Household)','Age (Median)','Home Value')
names(feature_list) <- feature_names
get_election_data <- function(){
data <- read_csv("../data/merged_final.csv")
outcomes <- data[,(ncol(data)-1):(ncol(data))]
#print(outcomes)
features <- data[,0:(ncol(data)-2)]
#print(features)
totals <- features %>%
bind_rows(summarise_all(., funs(if(is.numeric(.)) sum(.) else "Total")))
totals <<- (totals[nrow(totals),]
)
data
}
#tree <- rpart()
features <- feature_list[c(ft_names)]
Training_X <- election_data[election_data$year != 2016,c(features)]
Training_Y <- election_data[election_data$year != 2016,ncol(election_data)]
to_predict <- election_data[election_data$year == 2016,c(features)]
eval_y <- election_data[election_data$year == 2016,ncol(election_data)]
require('ggplot2')
require(dplyr)
require(tibble)
require(HDCI)
source("./scripts/KNN.R")
require('ggplot2')
require(dplyr)
require(tibble)
require(HDCI)
source("./scripts/KNN.R")
display_KNN(feature_names)
display_KNN(test_features(1))
require('ggplot2')
require(dplyr)
require(tibble)
require(HDCI)
source("./scripts/KNN.R")
display_KNN(1, test_features)
View(Training_X)
View(Training_Y)
